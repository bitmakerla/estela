name: Deploy API

on:
  push:
    paths:
      - bitmaker-api/**/*.py
      - .github/workflows/*.yml
    branches:
      - main

env:
  API_DIRECTORY: bitmaker-api

jobs:
  build:
    runs-on: ubuntu-latest
    name: build-main-api
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Get certificate to connect with MongoDB
        run: |
          mkdir $API_DIRECTORY/config/mongo_certificate/
          aws s3api get-object --bucket bitmaker-api-certificates --key ca-certificate.crt $API_DIRECTORY/config/mongo_certificate/ca-certificate.crt

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          cd $API_DIRECTORY
          docker build . --file docker-conf/Dockerfile-django-api --tag ${{ secrets.DOCKER_REGISTRY }}/bitmaker-django-api:${GITHUB_SHA::7}
          docker build . --file docker-conf/Dockerfile-celery-worker --tag ${{ secrets.DOCKER_REGISTRY }}/bitmaker-celery-worker:${GITHUB_SHA::7}
          docker build . --file docker-conf/Dockerfile-celery-beat --tag ${{ secrets.DOCKER_REGISTRY }}/bitmaker-celery-beat:${GITHUB_SHA::7}
          docker build . --file docker-conf/Dockerfile-redis --tag ${{ secrets.DOCKER_REGISTRY }}/bitmaker-redis:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/bitmaker-django-api:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/bitmaker-celery-beat:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/bitmaker-celery-worker:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/bitmaker-redis:${GITHUB_SHA::7}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: deploy-main-api
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Download terraform
        run: |
          cd $API_DIRECTORY
          rm -rf terraform-deployment 
          git clone https://${{ secrets.USERNAME_REPO }}:${{ secrets.PASSWORD_REPO }}@gitlab.com/bitmakerla/dev/terraform-deployment.git

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          cd $API_DIRECTORY
          kubectl apply -f terraform-deployment/config-files/api/kubernetes-prod/bitmaker-api-services.yaml --namespace=default
          kubectl apply -f terraform-deployment/config-files/api/kubernetes-prod/bitmaker-api-deployments.yaml --namespace=default
          kubectl set image deployment/bitmaker-django-api bitmaker-django-api=${{ secrets.DOCKER_REGISTRY }}/bitmaker-django-api:${GITHUB_SHA::7} --namespace=default
          kubectl set image deployment/bitmaker-celery-beat bitmaker-celery-beat=${{ secrets.DOCKER_REGISTRY }}/bitmaker-celery-beat:${GITHUB_SHA::7} --namespace=default
          kubectl set image deployment/bitmaker-celery-worker bitmaker-celery-worker=${{ secrets.DOCKER_REGISTRY }}/bitmaker-celery-worker:${GITHUB_SHA::7} --namespace=default
          kubectl set image deployment/bitmaker-redis bitmaker-redis=${{ secrets.DOCKER_REGISTRY }}/bitmaker-redis:${GITHUB_SHA::7} --namespace=default
          kubectl rollout status deployment/bitmaker-django-api --namespace=default
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/bitmaker-django-api
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/bitmaker-celery-beat
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/bitmaker-celery-worker
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/bitmaker-redis
          kubectl get pods -l app=bitmaker-django-api --namespace=default
          sleep 10 # Wait for previous pod to terminate
          kubectl exec --namespace=default \
          $(kubectl get pod -l app=bitmaker-django-api --field-selector=status.phase==Running -o jsonpath="{.items[0].metadata.name}" --namespace=default) \
          -- python manage.py makemigrations
          kubectl exec --namespace=default \
          $(kubectl get pod -l app=bitmaker-django-api --field-selector=status.phase==Running -o jsonpath="{.items[0].metadata.name}" --namespace=default) \
          -- python manage.py migrate