name: Test MR API

on:
  pull_request:
    paths:
      - bitmaker-api/**/*.py
      - .github/workflows/*.yml

env:
  API_DIRECTORY: bitmaker-api

jobs:
  build:
    runs-on: ubuntu-latest
    name: build-mr-api
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          cd $API_DIRECTORY
          docker build . --file docker-conf/Dockerfile-django-api --tag ${{ secrets.DOCKER_REGISTRY }}/bitmaker-django-api:test_${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/bitmaker-django-api:test_${GITHUB_SHA::7}
  test:
    needs: build
    runs-on: ubuntu-latest
    name: test-mr-api
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Download terraform
        run: |
          cd $API_DIRECTORY
          rm -rf terraform-deployment 
          git clone https://${{ secrets.USERNAME_REPO }}:${{ secrets.PASSWORD_REPO }}@gitlab.com/bitmakerla/dev/terraform-deployment.git

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Test on DigitalOcean Kubernetes
        run: |
          cd $API_DIRECTORY
          kubectl create namespace ${GITHUB_SHA::7}
          kubectl get secret api-secrets --namespace=default -oyaml | grep -v '^\s*namespace:\s' | kubectl apply --namespace=${GITHUB_SHA::7} -f -
          kubectl get secret regcred --namespace=default -oyaml | grep -v '^\s*namespace:\s' | kubectl apply --namespace=${GITHUB_SHA::7} -f -
          kubectl get configmap api-config --namespace=default -oyaml | grep -v '^\s*namespace:\s' | kubectl apply --namespace=${GITHUB_SHA::7} -f -
          kubectl apply -f terraform-deployment/config-files/api/kubernetes-test/bitmaker-cluster-role.yaml
          kubectl create serviceaccount bitmaker-api --namespace=${GITHUB_SHA::7}
          kubectl create clusterrolebinding bitmaker-api-bind-${GITHUB_SHA::7} --clusterrole=bitmaker-api-role --serviceaccount=${GITHUB_SHA::7}:bitmaker-api
          kubectl apply -f terraform-deployment/config-files/api/kubernetes-test/bitmaker-api-deployments.yaml --namespace=${GITHUB_SHA::7}
          kubectl set image deployment/bitmaker-django-api bitmaker-django-api=${{ secrets.DOCKER_REGISTRY }}/bitmaker-django-api:test_${GITHUB_SHA::7} --namespace=${GITHUB_SHA::7}
          kubectl rollout status deployment/bitmaker-django-api --namespace=${GITHUB_SHA::7}
          kubectl wait --for=condition=available --timeout=300s --namespace=${GITHUB_SHA::7} deployment/bitmaker-django-api
          kubectl get pods -l app=bitmaker-django-api --namespace=${GITHUB_SHA::7}
          sleep 10
          kubectl exec --namespace=${GITHUB_SHA::7} \
          $(kubectl get pod -l app=bitmaker-django-api --field-selector=status.phase==Running -o jsonpath="{.items[0].metadata.name}" --namespace=${GITHUB_SHA::7}) \
          -- pytest -svx
  cleanup:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    name: cleanup-mr-job-api
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Delete Namespace and cluster role
        run: |
          kubectl delete clusterrolebinding bitmaker-api-bind-${GITHUB_SHA::7}
          kubectl delete namespace ${GITHUB_SHA::7}