name: Deploy Kafka

on:
  push:
    paths:
      - bitmaker-kafka/consumer.py
      - .github/workflows/*.yml
    branches:
      - main

env:
  KAFKA_DIRECTORY: bitmaker-kafka

jobs:
  build-main-kafka:
    runs-on: ubuntu-latest
    name: build-main-kafka
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Get certificate to connect with MongoDB
        run: |
          mkdir -p $KAFKA_DIRECTORY/config/mongo_certificate/
          aws s3api get-object --bucket bitmaker-api-certificates --key ca-certificate.crt $KAFKA_DIRECTORY/config/mongo_certificate/ca-certificate.crt

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          cd $KAFKA_DIRECTORY
          docker build . --tag ${{ secrets.DOCKER_REGISTRY }}/bitmaker-consumer:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/bitmaker-consumer:${GITHUB_SHA::7}
  deploy-main-kafka:
    needs: build-main-kafka
    runs-on: ubuntu-latest
    name: deploy-main-kafka
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Download terraform
        run: |
          cd $KAFKA_DIRECTORY
          rm -rf terraform-deployment 
          git clone https://${{ secrets.USERNAME_REPO }}:${{ secrets.PASSWORD_REPO }}@gitlab.com/bitmakerla/dev/terraform-deployment.git

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          cd $KAFKA_DIRECTORY
          kubectl apply -f terraform-deployment/config-files/kafka/prod/bitmaker-zookeeper.yaml --namespace=default
          kubectl apply -f terraform-deployment/config-files/kafka/prod/bitmaker-kafka.yaml --namespace=default
          kubectl rollout status --watch --timeout=300s --namespace=default sts/kafka
          kubectl apply -f terraform-deployment/config-files/kafka/prod/bitmaker-kafka-consumers.yaml --namespace=default
          kubectl set image deployment/kafka-items-consumer consumer=${{ secrets.DOCKER_REGISTRY }}/bitmaker-consumer:${GITHUB_SHA::7} --namespace=default
          kubectl set image deployment/kafka-requests-consumer consumer=${{ secrets.DOCKER_REGISTRY }}/bitmaker-consumer:${GITHUB_SHA::7} --namespace=default
          kubectl rollout status deployment/kafka-items-consumer --namespace=default
          kubectl rollout status deployment/kafka-requests-consumer --namespace=default
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/kafka-items-consumer
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/kafka-requests-consumer
          kubectl get pods -l app=kafka-consumer --namespace=default