# Generated by Django 3.1.14 on 2023-05-29 07:44

from django.conf import settings
from django.db import migrations, models

from core.tasks import get_chain_to_process_usage_data, record_job_coverage_event


def update_spiderjobs_status(apps, schema_editor):
    SpiderJob = apps.get_model("core", "SpiderJob")
    incomplete_jobs = SpiderJob.objects.filter(status=SpiderJob.INCOMPLETE_STATUS)
    incomplete_jobs.update(status=SpiderJob.COMPLETED_STATUS)

    for job in incomplete_jobs:
        chain_of_usage_process = get_chain_to_process_usage_data(job_id=job.jid)
        chain_of_usage_process.apply_async(
            countdown=settings.COUNTDOWN_RECORD_PROJECT_USAGE_AFTER_JOB_EVENT
        )
        record_job_coverage_event.apply_async(
            args=[job.jid],
            countdown=settings.COUNTDOWN_RECORD_COVERAGE_AFTER_JOB_EVENT,
        )


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0027_spiderjobenvvar_masked"),
    ]

    operations = [
        migrations.RunPython(update_spiderjobs_status),
        migrations.AlterField(
            model_name="spiderjob",
            name="status",
            field=models.CharField(
                choices=[
                    ("IN_QUEUE", "In queue"),
                    ("WAITING", "Waiting"),
                    ("RUNNING", "Running"),
                    ("STOPPED", "Stopped"),
                    ("COMPLETED", "Completed"),
                    ("ERROR", "Error"),
                ],
                default="WAITING",
                help_text="Job status.",
                max_length=16,
            ),
        ),
    ]
