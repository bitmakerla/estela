/* tslint:disable */
/* eslint-disable */
/**
 * estela API v1.0 Documentation
 * estela API Swagger Specification
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SpiderJobEnvVar,
    SpiderJobEnvVarFromJSON,
    SpiderJobEnvVarFromJSONTyped,
    SpiderJobEnvVarToJSON,
} from './';

/**
 * 
 * @export
 * @interface SpiderUpdate
 */
export interface SpiderUpdate {
    /**
     * A UUID identifying this spider.
     * @type {string}
     * @memberof SpiderUpdate
     */
    readonly sid?: string;
    /**
     * Project environment variables.
     * @type {Array<SpiderJobEnvVar>}
     * @memberof SpiderUpdate
     */
    envVars?: Array<SpiderJobEnvVar>;
    /**
     * New data status.
     * @type {string}
     * @memberof SpiderUpdate
     */
    dataStatus?: SpiderUpdateDataStatusEnum;
    /**
     * New data expiry days.
     * @type {number}
     * @memberof SpiderUpdate
     */
    dataExpiryDays?: number;
}

/**
* @export
* @enum {string}
*/
export enum SpiderUpdateDataStatusEnum {
    Persistent = 'PERSISTENT',
    Pending = 'PENDING'
}

export function SpiderUpdateFromJSON(json: any): SpiderUpdate {
    return SpiderUpdateFromJSONTyped(json, false);
}

export function SpiderUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpiderUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sid': !exists(json, 'sid') ? undefined : json['sid'],
        'envVars': !exists(json, 'env_vars') ? undefined : ((json['env_vars'] as Array<any>).map(SpiderJobEnvVarFromJSON)),
        'dataStatus': !exists(json, 'data_status') ? undefined : json['data_status'],
        'dataExpiryDays': !exists(json, 'data_expiry_days') ? undefined : json['data_expiry_days'],
    };
}

export function SpiderUpdateToJSON(value?: SpiderUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'env_vars': value.envVars === undefined ? undefined : ((value.envVars as Array<any>).map(SpiderJobEnvVarToJSON)),
        'data_status': value.dataStatus,
        'data_expiry_days': value.dataExpiryDays,
    };
}


