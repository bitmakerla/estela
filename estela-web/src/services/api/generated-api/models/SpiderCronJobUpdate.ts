/* tslint:disable */
/* eslint-disable */
/**
 * estela API v1.0 Documentation
 * estela API Swagger Specification
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SpiderCronJobUpdate
 */
export interface SpiderCronJobUpdate {
    /**
     * A unique integer value identifying this cron job.
     * @type {number}
     * @memberof SpiderCronJobUpdate
     */
    readonly cjid?: number;
    /**
     * Cron job status.
     * @type {string}
     * @memberof SpiderCronJobUpdate
     */
    status?: SpiderCronJobUpdateStatusEnum;
    /**
     * Cron job schedule definition.
     * @type {string}
     * @memberof SpiderCronJobUpdate
     */
    schedule?: string;
    /**
     * True if this cron job stores its items in a unique collection.
     * @type {boolean}
     * @memberof SpiderCronJobUpdate
     */
    uniqueCollection?: boolean;
    /**
     * Data status.
     * @type {string}
     * @memberof SpiderCronJobUpdate
     */
    dataStatus?: SpiderCronJobUpdateDataStatusEnum;
    /**
     * Days before data is deleted.
     * @type {number}
     * @memberof SpiderCronJobUpdate
     */
    dataExpiryDays?: number | null;
}

/**
* @export
* @enum {string}
*/
export enum SpiderCronJobUpdateStatusEnum {
    Active = 'ACTIVE',
    Disabled = 'DISABLED'
}/**
* @export
* @enum {string}
*/
export enum SpiderCronJobUpdateDataStatusEnum {
    Persistent = 'PERSISTENT',
    Pending = 'PENDING'
}

export function SpiderCronJobUpdateFromJSON(json: any): SpiderCronJobUpdate {
    return SpiderCronJobUpdateFromJSONTyped(json, false);
}

export function SpiderCronJobUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpiderCronJobUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cjid': !exists(json, 'cjid') ? undefined : json['cjid'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'schedule': !exists(json, 'schedule') ? undefined : json['schedule'],
        'uniqueCollection': !exists(json, 'unique_collection') ? undefined : json['unique_collection'],
        'dataStatus': !exists(json, 'data_status') ? undefined : json['data_status'],
        'dataExpiryDays': !exists(json, 'data_expiry_days') ? undefined : json['data_expiry_days'],
    };
}

export function SpiderCronJobUpdateToJSON(value?: SpiderCronJobUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'schedule': value.schedule,
        'unique_collection': value.uniqueCollection,
        'data_status': value.dataStatus,
        'data_expiry_days': value.dataExpiryDays,
    };
}


