/* tslint:disable */
/* eslint-disable */
/**
 * Bitmaker API v1.0 Documentation
 * Bitmaker API Swagger Specification
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Spider,
    SpiderFromJSON,
    SpiderFromJSONTyped,
    SpiderToJSON,
} from './';

/**
 * 
 * @export
 * @interface DeployUpdate
 */
export interface DeployUpdate {
    /**
     * 
     * @type {number}
     * @memberof DeployUpdate
     */
    readonly did?: number;
    /**
     * 
     * @type {string}
     * @memberof DeployUpdate
     */
    status?: DeployUpdateStatusEnum;
    /**
     * 
     * @type {Array<Spider>}
     * @memberof DeployUpdate
     */
    spiders?: Array<Spider>;
}

/**
* @export
* @enum {string}
*/
export enum DeployUpdateStatusEnum {
    Success = 'SUCCESS',
    Building = 'BUILDING',
    Failure = 'FAILURE',
    Canceled = 'CANCELED'
}

export function DeployUpdateFromJSON(json: any): DeployUpdate {
    return DeployUpdateFromJSONTyped(json, false);
}

export function DeployUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeployUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'did': !exists(json, 'did') ? undefined : json['did'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'spiders': !exists(json, 'spiders') ? undefined : ((json['spiders'] as Array<any>).map(SpiderFromJSON)),
    };
}

export function DeployUpdateToJSON(value?: DeployUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'spiders': value.spiders === undefined ? undefined : ((value.spiders as Array<any>).map(SpiderToJSON)),
    };
}


